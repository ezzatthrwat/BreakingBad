plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-platform-android'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "me.ezzattharwat.breakingbad"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "me.ezzattharwat.breakingbad.HiltTestRunner"
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'BASE_URL', '\"https://www.breakingbadapi.com/api/\"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/proguard/rules-proguard-debug.pro"
        }
        release {
            buildConfigField 'String', 'BASE_URL', '\"https://www.breakingbadapi.com/api/\"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/proguard/rules-proguard.pro"
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    defaultConfig {
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/resources'
            test {
                resources.srcDirs += sharedTestDir
            }
            androidTest {
                resources.srcDirs += sharedTestDir
            }
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompactVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXJunitVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "io.mockk:mockk:$mockVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertjVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoIntentsVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"
    implementation "androidx.arch.core:core-testing:$coreTestingVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "androidx.test.espresso:espresso-contrib:$espressoVersion"

    //webservice Setup
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Architectural Components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$LifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$archLifecycleExtensionsVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$LifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$LifecycleVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$CoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$CoroutinesVersion"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$LifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$LifecycleVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glidVersion"
    kapt "com.github.bumptech.glide:compiler:$glidVersion"


    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"


    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodels"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"
}
kapt {
    correctErrorTypes true
}